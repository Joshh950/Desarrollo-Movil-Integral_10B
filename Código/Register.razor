@page "/register"
@using loginv3.Services
@using loginv3.Models
@inject IUserService UserService
@inject NavigationManager NavigationManager

<h3 class="text-center mt-5">Registro</h3>

<div class="container d-flex justify-content-center">
    <div class="card p-4" style="width: 400px;">
        <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="name" class="form-label">Nombre</label>
                <InputText @bind-Value="registerModel.Name" id="name" class="form-control" placeholder="Ingresa tu nombre" />
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Correo Electrónico</label>
                <InputText @bind-Value="registerModel.Email" id="email" class="form-control" placeholder="Ingresa tu correo" />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Contraseña</label>
                <InputText @bind-Value="registerModel.Password" id="password" type="password" class="form-control" placeholder="Ingresa tu contraseña" />
            </div>

            <div class="d-flex justify-content-center gap-2">
                <button type="submit" class="btn btn-secondary">Registrarse</button>
                <button type="button" class="btn btn-outline-secondary" @onclick="Cancel">Cancelar</button>
            </div>

            <div class="text-center mt-3">
                <p>¿Ya tienes una cuenta? <NavLink href="/login" class="text-primary">Inicia sesión aquí</NavLink></p>
            </div>
        </EditForm>
    </div>
</div>

@if (registrationError)
{
    <div class="alert alert-danger text-center mt-3">Error al registrar el usuario. Inténtalo nuevamente.</div>
}

@if (registrationSuccess)
{
    <div class="alert alert-success text-center mt-3">¡Registro exitoso! Ahora puedes iniciar sesión.</div>
}

@code {
    private User registerModel = new User();
    private bool registrationError = false;
    private bool registrationSuccess = false;

    private async Task HandleRegister()
    {
        try
        {
            await UserService.RegisterAsync(registerModel);
            registrationError = false;
            registrationSuccess = true;
        }
        catch
        {
            registrationError = true;
            registrationSuccess = false;
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/login");
    }
}
